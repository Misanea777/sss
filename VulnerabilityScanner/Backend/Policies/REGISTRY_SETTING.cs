using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using VulnerabilityScanner.Backend.Executors;
using VulnerabilityScanner.Backend.Policies.Misc;

namespace VulnerabilityScanner.Backend.Policies
{
    class REGISTRY_SETTING : Policy
    {
        public string type { get; set; }
        public string description { get; set; }
        public string value_type { get; set; }
        public string value_data { get; set; }
        public string reg_key { get; set; }
        public string reg_item { get; set; }
        public string check_type { get; set; }
        public string reg_option { get; set; }
        public string reg_ignore_hku_users { get; set; }
        public string reg_enum { get; set; }

        private RESULT passsed = RESULT.NOT_CHECKED;
        public REGISTRY_SETTING()
        {
            type = ItemType.REGISTRY_SETTING.ToString();
        }
        public override string ToString()
        {
            int len = passsed.ToString().Length;
            len -= 10;
            string addSpaces = "";
            for (int i = 0; i < len; i++) addSpaces += " ";
            return passsed.ToString() + addSpaces + " | " + description;
        }

        public void scan(IniFile file)
        {
            string output = CommandExecutor.ExecuteCommand("reg query " + reg_key + " /v " + reg_item).Trim();

            if(String.IsNullOrEmpty(output))
            {
/*                Console.WriteLine();
                Console.WriteLine(description);
                Console.WriteLine();*/

                passsed = RESULT.NOT_APLIED;
                return;
            }

            string[] separator = {"    " };
            string[] pices = output.Split(separator, StringSplitOptions.None);

            if (pices.Length > 3 && pices[pices.Length - 2].Equals("REG_DWORD"))
            {
                if (Comparator.compare(value_data, value_type, Convert.ToInt32(pices[pices.Length - 1], 16).ToString())) passsed = RESULT.PASSED;
                else passsed = RESULT.FAILED;
                return;
            }

            if (value_type.Equals("POLICY_TEXT") || value_type.Equals("POLICY_MULTI_TEXT"))
            {
                string valueToCompare = string.Empty;
                if (pices.Length > 3) valueToCompare = pices[pices.Length - 1];
                if (Comparator.compare(value_data, value_type, valueToCompare)) passsed = RESULT.PASSED;
                else passsed = RESULT.FAILED;
                return;
            }


            
        }

        public RESULT isPassed()
        {
            return passsed;
        }

        public void enforce(IniFile file)
        {
            if (passsed == RESULT.NOT_APLIED || passsed == RESULT.NOT_CHECKED) return;
            if(value_type.Equals("POLICY_DWORD"))
            {
                string converted = value_data.Replace("\"", "");
                uint value = (uint)Convert.ToInt32(converted);
                converted = "0x" + Convert.ToString(value, 16);
                Console.WriteLine(value_data + " - " + converted);
                Console.WriteLine("reg query " + reg_key + " /v " + reg_item + " /t REG_DWORD /d " + converted + " /f");
                CommandExecutor.ExecuteCommand("reg add " + reg_key + " /v " + reg_item + " /t REG_DWORD /d " + converted + " /f");
            }
            
        }
    }
}
