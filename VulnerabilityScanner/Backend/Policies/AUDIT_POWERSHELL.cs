using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using VulnerabilityScanner.Backend.Executors;
using VulnerabilityScanner.Backend.Policies.Misc;

namespace VulnerabilityScanner.Backend.Policies
{
    class AUDIT_POWERSHELL : Policy
    {
        public string type { get; set; }
        public string description { get; set; }
        public string value_type { get; set; }
        public string value_data { get; set; }
        public string powershell_args { get; set; }
        public string only_show_cmd_output { get; set; }
        public string check_type { get; set; }
        public string severity { get; set; }
        public string powershell_option { get; set; }
        public string powershell_console_file { get; set; }

        private RESULT passsed = RESULT.NOT_CHECKED;
        public AUDIT_POWERSHELL()
        {
            type = ItemType.AUDIT_POWERSHELL.ToString();
        }
        public override string ToString()
        {
            int len = passsed.ToString().Length;
            len -= 10;
            string addSpaces = "";
            for (int i = 0; i < len; i++) addSpaces += " ";
            return passsed.ToString() + addSpaces + " | " + description;
        }

        public void scan(IniFile file)
        {

        }

        public RESULT isPassed()
        {
            return passsed;
        }

        public void enforce(IniFile file)
        {

        }
    }
}
