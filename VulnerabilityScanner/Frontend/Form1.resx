<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tOewBAAAAABJRU5ErkJggg==
</value>
  </data>
</root>